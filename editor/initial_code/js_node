"use strict";

function climbing_route(elevation_map){
    return 0;
}

var assert = require('assert');

if (!global.is_checking) {
    assert.equal(sumTwo(3, 2), 5, "First")
    assert.equal(sumTwo(5, 7), 12, "Second")
    assert.equal(climbing_route([
        '000',
        '210',
        '000']) == 6, 'basic')
    assert.equal(climbing_route([
        '00000',
        '05670',
        '04980',
        '03210',
        '00000']) == 26, 'spiral')
    assert.equal(climbing_route([
        '000000001',
        '222322222',
        '100000000']) == 26, 'bridge')
    assert.equal(climbing_route([
        '000000002110',
        '011100002310',
        '012100002220',
        '011100000000']) == 26, 'two top')
    assert.equal(climbing_route([
        '00000000210000',
        '00100001432100',
        '01211112211000',
        '00100000000000')) == 22, 'one top')
    assert.equal(climbing_route([
        '00000000000000000000000000',
        '00000000000111111100000000',
        '00000000000122222100000000',
        '00000000000123332100000000',
        '00000000000123432100000000',
        '00000000000123332100000000',
        '00000000000122222100000000',
        '00000000000111111100000000',
        '00000000000000000000000000',
        '00000111110000000000000000',
        '00000122210000000000000000',
        '00000123210000000000000000',
        '00000122210000000011223110',
        '00000111110000000000000000',
        '01110000000000000000000000',
        '01210000000000000000000000',
        '01110000000000000000000000',
        '00000000000000000000000000']) == 70, 'pyramids')
    console.log("Coding complete? Click 'Check' to review your tests and earn cool rewards!");
}
